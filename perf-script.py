# perf script event handlers, generated by perf script -g python
# Licensed under the terms of the GNU GPL License version 2

# The common_* event handler fields are the most useful fields common to
# all events.  They don't necessarily correspond to the 'common_*' fields
# in the format files.  Those fields not available as handler params can
# be retrieved using Python functions of the form common_*(context).
# See the perf-script-python Documentation for the list of available functions.

from __future__ import print_function

import os
import sys
import json

sys.path.append(os.environ['PERF_EXEC_PATH'] + \
	'/scripts/python/Perf-Trace-Util/lib/Perf/Trace')

from perf_trace_context import *
from Core import *


# def trace_begin():
	# print("in trace_begin")

def trace_end():
	d = {
			'traceEvents':traced_events,
			'displayTimeUnit':'ns'
		}
	print(json.dumps(d))

traced_events=[]

def trace_unhandled(event_name, context, event_fields_dict, perf_sample_dict):
	# print(event_name, context, event_fields_dict, perf_sample_dict)
	if event_name.startswith('myprobe__'):
		if event_name.endswith('__return'):
			name = event_name[9:-8]
			ph = 'E'
		else:
			name = event_name[9:]
			ph = 'B'
			
		ts = event_fields_dict['common_s']*1e6+event_fields_dict['common_ns']*1e-3
		traced_events.append({
			'name':name,
			'cat':'call',
			'ph':ph,
			'ts': ts,
			'tts': ts,
			'pid':1,
			'tid':1
			})
		# print(get_dict_as_string(event_fields_dict))
		# print('Sample: {'+get_dict_as_string(perf_sample_dict['sample'], ', ')+'}')

def print_header(event_name, cpu, secs, nsecs, pid, comm):
	print("%-20s %5u %05u.%09u %8u %-20s " % \
	(event_name, cpu, secs, nsecs, pid, comm), end="")

def get_dict_as_string(a_dict, delimiter=' '):
	return delimiter.join(['%s=%s'%(k,str(v))for k,v in sorted(a_dict.items())])
